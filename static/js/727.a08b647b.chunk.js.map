{"version":3,"file":"static/js/727.a08b647b.chunk.js","mappings":"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","sources":["components/tmdb-api.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'fc79b9c24904503e15894f783d71423b';\nconst API_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day';\nconst API_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\nconst API_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nexport const getMovies = async page => {\n  const { data } = await axios.get(API_TRENDING, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      total_pages: 12,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getKeyWord = async (searchQuery, page) => {\n  const { data } = await axios.get(API_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    },\n  });\n\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainInfo = styled.div`\n  display: flex;\n  margin-bottom: 5px;\n\n  display: grid;\n  grid-template:\n    'image about about'\n    'image about about'\n    'image addinfo addinfo';\n\n  > img {\n    display: block;\n    grid-area: image;\n    object-fit: cover;\n    background-color: #dedede;\n  }\n`;\n\nexport const AboutMovie = styled.div`\n  margin-left: 20px;\n  grid-area: about;\n  margin-bottom: 0px;\n\n  > h2 {\n    margin: 0;\n    font-size: 40px;\n    font-weight: 500;\n  }\n\n  > p {\n    margin-top: 5px;\n    margin-bottom: 20px;\n  }\n\n  > h3 {\n    margin: 0;\n    font-size: 16px;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  grid-area: addinfo;\n  flex-direction: column;\n  width: 100%;\n  background-color: #fff;\n  border-radius: 3px;\n  margin-left: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n\n  > p {\n    margin: 0;\n    font-weight: 500;\n    font-size: 16px;\n  }\n\n  > ul {\n    display: flex;\n    padding: 0;\n    list-style: none;\n    gap: 10px;\n  }\n`;\n\nexport const LinkBack = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  width: fit-content;\n  padding: 8px 16px;\n  margin-bottom: 6px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: #1a9c00;\n  font-weight: 500;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.09);\n    color: white;\n    background-color: #20be00;\n  }\n`;\n\nexport const LinkCast = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  width: fit-content;\n  padding: 8px 16px;\n  margin-bottom: 6px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: #1a9c00;\n  font-weight: 500;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.09);\n    color: white;\n    background-color: #20be00;\n  }\n`;\n\nexport const LinkReviews = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  width: fit-content;\n  padding: 8px 16px;\n  margin-bottom: 6px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: #1a9c00;\n  font-weight: 500;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.09);\n    color: white;\n    background-color: #20be00;\n  }\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { MainInfo, AboutMovie, AddInfo, LinkBack, LinkCast, LinkReviews } from './MovieDetails.styled';\nimport { StyledIoCaretBackCircle, StyledFaUsers, StyledTbMessages } from 'components/Icons/Icons.styled';\nimport defaultImage from './noposter.png';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieById } from 'components/tmdb-api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w300';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovies(data);\n      } catch (err) {\n        return err.message;\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  \n  return (\n    <main>\n      <LinkBack to={location.state?.from || '/'}>\n        <StyledIoCaretBackCircle /> Go Back\n      </LinkBack>\n      {movies && (\n        <>\n          <MainInfo>\n            <img\n              src={\n                movies.poster_path === null\n                  ? `${defaultImage}`\n                  : `${POSTER_URL}/${movies.poster_path}`\n              }\n              alt={movies.title}\n            />\n\n            <AboutMovie>\n              <h2>{movies.title}</h2>\n              <p>Rating: {movies.vote_average}</p>\n              <p>Release Date: {movies.release_date}</p>\n              <h3>Overview:</h3>\n              <p>{movies.overview}</p>\n            </AboutMovie>\n            <AddInfo>\n              <p>Additional information:</p>\n              <ul>\n                <li>\n                  <LinkCast\n                    to={`/movies/${movieId}/cast`}\n                    state={{ from: location.state?.from || '/movies' }}\n                  >\n                    <StyledFaUsers /> Cast\n                  </LinkCast>\n                </li>\n                <li>\n                  <LinkReviews\n                    to={`/movies/${movieId}/reviews`}\n                    state={{ from: location.state?.from || '/movies' }}\n                  >\n                    <StyledTbMessages/>Reviews\n                  </LinkReviews>\n                </li>\n              </ul>\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </AddInfo>\n          </MainInfo>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","API_MOVIE_ID","getMovies","page","axios","params","api_key","total_pages","data","getMovieById","id","String","getCast","getReviews","getKeyWord","searchQuery","query","MainInfo","styled","AboutMovie","AddInfo","LinkBack","NavLink","LinkCast","LinkReviews","movieId","useParams","useState","movies","setMovies","location","useLocation","useEffect","fetchData","message","to","state","from","src","poster_path","defaultImage","alt","title","vote_average","release_date","overview","Suspense","fallback","Loader"],"sourceRoot":""}