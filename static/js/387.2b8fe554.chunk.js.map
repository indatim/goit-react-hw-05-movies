{"version":3,"file":"static/js/387.2b8fe554.chunk.js","mappings":"wQAEaA,E,QAASC,EAAAA,IAAH,oV,4BCqCnB,EAhCyB,WACvB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAWP,GAFhB,OAERQ,EAFQ,OAGdJ,EAAWI,EAAKC,SAHF,yEAKP,KAAIC,SALG,yDAAH,qDAQfJ,GACD,GAAE,CAACN,KAGF,iCACE,SAAC,EAAAW,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,MACnBV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACnB,EAAD,YACE,2BACE,SAAC,KAAD,IACCiB,MAEH,uBAAIC,MALOC,EADF,MAWlB,C,mMCpCKC,EAAU,mCAEVC,EAAe,sCAGRC,EAAS,mCAAG,WAAMC,GAAN,yFACAC,EAAAA,EAAAA,IALJ,kDAK4B,CAC7CC,OAAQ,CACNC,QAASN,EACTG,KAAMA,EACNI,YAAa,MALM,uBACfjB,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,sDAWTkB,EAAY,mCAAG,WAAMT,GAAN,yFACHK,EAAAA,EAAAA,IAAA,UAAaH,EAAeQ,OAAOV,IAAO,CAC/DM,OAAQ,CACNC,QAASN,KAHa,uBAClBV,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZoB,EAAO,mCAAG,WAAMX,GAAN,yFACEK,EAAAA,EAAAA,IAAA,UAAaH,EAAeQ,OAAOV,GAAnC,YAAkD,CACvEM,OAAQ,CACNC,QAASN,KAHQ,uBACbV,EADa,EACbA,KADa,kBAMdA,GANc,2CAAH,sDASPD,EAAU,mCAAG,WAAMU,GAAN,yFACDK,EAAAA,EAAAA,IAAA,UAAaH,EAAeQ,OAAOV,GAAnC,YAAkD,CACvEM,OAAQ,CACNC,QAASN,KAHW,uBAChBV,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVqB,EAAU,mCAAG,WAAOC,EAAaT,GAApB,yFACDC,EAAAA,EAAAA,IAzCN,4CAyC4B,CAC3CC,OAAQ,CACNC,QAASN,EACTa,MAAOD,EACPT,KAAMA,KALc,uBAChBb,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,uD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/tmdb-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Review = styled.div`\n  display: block;\n  margin-bottom: 10px;\n  background-color: #dedede;\n  padding: 4px;\n  border-radius: 4px;\n\n  > h4 {\n    display: flex;\n    align-items: center;\n    margin: 4px 0px 8px 2px;\n  }\n\n  > p {\n    margin: 2px;\n    background-color: #ffffff;\n    padding: 4px;\n    border-radius: 4px;\n  }\n`;","import { Suspense, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'components/tmdb-api';\nimport { Review } from './Reviews.styled';\nimport { StyledFaUserCircle } from 'components/Icons/Icons.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst GetMoviesReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data.results);\n      } catch (err) {\n        return err.message;\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Suspense fallback={<Loader />}></Suspense>\n      {reviews.map(({ author, content, id }) => (\n        <Review key={id}>\n          <h4>\n            <StyledFaUserCircle />\n            {author}\n          </h4>\n          <p>{content}</p>\n        </Review>\n      ))}\n    </>\n  );\n};\n\nexport default GetMoviesReviews;\n","import axios from 'axios';\nconst API_KEY = 'fc79b9c24904503e15894f783d71423b';\nconst API_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day';\nconst API_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\nconst API_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nexport const getMovies = async page => {\n  const { data } = await axios.get(API_TRENDING, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      total_pages: 12,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getKeyWord = async (searchQuery, page) => {\n  const { data } = await axios.get(API_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    },\n  });\n\n  return data;\n};\n"],"names":["Review","styled","movieId","useParams","useState","reviews","setReviews","useEffect","fetchData","getReviews","data","results","message","Suspense","fallback","Loader","map","author","content","id","API_KEY","API_MOVIE_ID","getMovies","page","axios","params","api_key","total_pages","getMovieById","String","getCast","getKeyWord","searchQuery","query"],"sourceRoot":""}